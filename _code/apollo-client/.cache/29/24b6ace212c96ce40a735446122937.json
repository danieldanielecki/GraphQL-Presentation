{"id":"../node_modules/@apollo/client/utilities/observables/Observable.js","dependencies":[{"name":"/Users/danieldanielecki/Downloads/GraphQL-Presentation/_code/apollo-client/node_modules/@apollo/client/utilities/observables/Observable.js.map","includedInParent":true,"mtime":1702976844524},{"name":"/Users/danieldanielecki/Downloads/GraphQL-Presentation/_code/apollo-client/package.json","includedInParent":true,"mtime":1702977653647},{"name":"/Users/danieldanielecki/Downloads/GraphQL-Presentation/_code/apollo-client/node_modules/@apollo/client/utilities/package.json","includedInParent":true,"mtime":1702976844524},{"name":"zen-observable-ts","loc":{"line":1,"column":27,"index":27},"parent":"/Users/danieldanielecki/Downloads/GraphQL-Presentation/_code/apollo-client/node_modules/@apollo/client/utilities/observables/Observable.js","resolved":"/Users/danieldanielecki/Downloads/GraphQL-Presentation/_code/apollo-client/node_modules/zen-observable-ts/module.js"},{"name":"symbol-observable","loc":{"line":4,"column":7,"index":186},"parent":"/Users/danieldanielecki/Downloads/GraphQL-Presentation/_code/apollo-client/node_modules/@apollo/client/utilities/observables/Observable.js","resolved":"/Users/danieldanielecki/Downloads/GraphQL-Presentation/_code/apollo-client/node_modules/symbol-observable/es/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Observable\", {\n  enumerable: true,\n  get: function () {\n    return _zenObservableTs.Observable;\n  }\n});\nvar _zenObservableTs = require(\"zen-observable-ts\");\nrequire(\"symbol-observable\");\n// This simplified polyfill attempts to follow the ECMAScript Observable\n// proposal (https://github.com/zenparsing/es-observable)\n\n// The zen-observable package defines Observable.prototype[Symbol.observable]\n// when Symbol is supported, but RxJS interop depends on also setting this fake\n// '@@observable' string as a polyfill for Symbol.observable.\nvar prototype = _zenObservableTs.Observable.prototype;\nvar fakeObsSymbol = \"@@observable\";\nif (!prototype[fakeObsSymbol]) {\n  // @ts-expect-error\n  prototype[fakeObsSymbol] = function () {\n    return this;\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":12,"column":4}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":12,"column":20}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":12,"column":23}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":12,"column":30}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":13,"column":7}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":17,"column":8},"generated":{"line":20,"column":0}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":17,"column":8},"generated":{"line":20,"column":4}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":17,"column":17},"generated":{"line":20,"column":13}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":17,"column":22},"generated":{"line":20,"column":16}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":17,"column":32},"generated":{"line":20,"column":43}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":17,"column":32},"generated":{"line":20,"column":44}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":17,"column":17},"generated":{"line":20,"column":53}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":18,"column":6},"generated":{"line":21,"column":4}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":18,"column":19},"generated":{"line":21,"column":17}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":18,"column":22},"generated":{"line":21,"column":20}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":18,"column":62},"generated":{"line":21,"column":34}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":22,"column":4}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":19,"column":5},"generated":{"line":22,"column":5}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":19,"column":14},"generated":{"line":22,"column":14}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":19,"column":15},"generated":{"line":22,"column":15}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":19,"column":28},"generated":{"line":22,"column":28}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":19,"column":29},"generated":{"line":22,"column":29}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":19,"column":31},"generated":{"line":22,"column":31}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":23,"column":2}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":24,"column":2}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":21,"column":11},"generated":{"line":24,"column":11}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":21,"column":12},"generated":{"line":24,"column":12}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":21,"column":25},"generated":{"line":24,"column":25}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":24,"column":26}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":24,"column":29}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":24,"column":41}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":22,"column":4},"generated":{"line":25,"column":4}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":22,"column":11},"generated":{"line":25,"column":11}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":22,"column":15},"generated":{"line":25,"column":15}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":26,"column":2}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":23,"column":3},"generated":{"line":26,"column":3}},{"source":"../../../src/utilities/observables/Observable.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":27,"column":0}}],"sources":{"../../../src/utilities/observables/Observable.ts":"import type {\n  Observer,\n  Subscription as ObservableSubscription,\n  Subscriber,\n} from \"zen-observable-ts\";\nimport { Observable } from \"zen-observable-ts\";\n\n// This simplified polyfill attempts to follow the ECMAScript Observable\n// proposal (https://github.com/zenparsing/es-observable)\nimport \"symbol-observable\";\n\nexport type { Observer, ObservableSubscription, Subscriber };\n\n// The zen-observable package defines Observable.prototype[Symbol.observable]\n// when Symbol is supported, but RxJS interop depends on also setting this fake\n// '@@observable' string as a polyfill for Symbol.observable.\nconst { prototype } = Observable;\nconst fakeObsSymbol = \"@@observable\" as keyof typeof prototype;\nif (!prototype[fakeObsSymbol]) {\n  // @ts-expect-error\n  prototype[fakeObsSymbol] = function () {\n    return this;\n  };\n}\n\nexport { Observable };\n"},"lineCount":null}},"error":null,"hash":"a26cee98ca694a45ddbf0ab62f2ec528","cacheData":{"env":{}}}